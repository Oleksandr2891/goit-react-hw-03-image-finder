{"version":3,"sources":["style/GlobalStyle.jsx","Components/ImageGallery/ImageGalleryItem/GalleryItemStyled.jsx","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","utils/Api.jsx","Components/Button/ButtonStyled.jsx","Components/Button/Button.jsx","Components/Modal/ModalStyled.jsx","Components/Modal/Modal.jsx","Components/Loader/Loader.jsx","Components/ImageGallery/ImageGalleryStyled.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Seachbar/SearchbarStyled.jsx","Components/Seachbar/Searchbar.jsx","App.js","index.js"],"names":["createGlobalStyle","GalleryItem","styled","li","ImageGalleryItem","webformatURL","largeImageURL","tag","openModalWithImage","src","alt","className","onClick","configUrl","getImages","nextName","page","axios","get","then","response","data","hits","catch","err","alert","ButtonLoader","div","Button","onHandleLoadMore","type","Overlay","Modal","handleEscape","e","code","props","closeModal","onOverlayClick","target","currentTarget","window","addEventListener","this","document","querySelector","style","overflow","removeEventListener","children","Component","LoaderSpiner","color","height","width","timeout","ImageGalleryList","ul","ImageGallery","state","imageNameSearch","imageData","isModalOpen","setImagePath","onLoadImage","setState","path","prevState","prevProps","a","prevName","prevPage","notifySuccess","toast","success","notifyError","error","Api","length","scrollTo","top","documentElement","scrollHeight","behavior","map","id","Loader","SearchbarWrapper","header","Searchbar","handleImageNameChange","event","value","toLowerCase","handleSubmit","preventDefault","trim","warn","onSubmit","autoComplete","autoFocus","placeholder","name","onChange","App","handleFormSubmit","GlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c1cdcad.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  /* overflow-x: hidden; */\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple - system, BlinkMacSystemFont, 'Segoe UI', Roboto,\r\n    Oxygen - Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans - serif;\r\n  color: #212121;\r\n  background-color: #fff;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\nul,\r\nol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n\r\n}\r\n\r\n.list {\r\n  list-style: none;\r\n}\r\n\r\n\r\n.App {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n}\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const GalleryItem = styled.li`\r\n\r\n   border-radius: 2px;\r\n   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n\r\n.ImageGalleryItem-image {\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.ImageGalleryItem-image:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n\r\n\r\n`;","import { GalleryItem } from \"./GalleryItemStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tag, openModalWithImage }) => {\r\n    const openImage = () => openModalWithImage(largeImageURL);\r\n\r\n    return (\r\n\r\n        < GalleryItem>\r\n            <img src={webformatURL} alt={tag} className=\"ImageGalleryItem-image\" onClick={openImage} />\r\n        </ GalleryItem>\r\n\r\n    );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    openModalWithImage: PropTypes.func,\r\n    tag: PropTypes.string,\r\n    largeImageURL: PropTypes.string,\r\n    webformatURL: PropTypes.string,\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst configUrl = {\r\n    url: 'https://pixabay.com/api/',\r\n    keyUserPixabay: '22753244-01291854404e32317fab358dd',\r\n}\r\n\r\nconst getImages = (nextName, page = 1) => axios.get(`${configUrl.url}?q=${nextName}&page=${page}&key=${configUrl.keyUserPixabay}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits)\r\n    .catch(err => alert(err))\r\n\r\nexport default getImages","import styled from \"styled-components\";\r\n\r\nexport const ButtonLoader = styled.div`\r\n  margin: 15px auto;\r\n  text-align: center;\r\n\r\n\r\n.Button {\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.Button:hover,\r\n.Button:focus {\r\n  background-color: #303f9f;\r\n}\r\n`;","import { ButtonLoader } from \"./ButtonStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ onHandleLoadMore }) => {\r\n    const loadMore = () => onHandleLoadMore()\r\n    return (\r\n        <ButtonLoader>\r\n            <button type=\"button\" onClick={loadMore} className=\"Button\">Load more</button>\r\n        </ButtonLoader>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onHandleLoadMore: PropTypes.func,\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Overlay = styled.div`\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n  \r\n\r\n\r\n.modal {\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n}\r\n`;","import React, { Component } from \"react\";\r\nimport { Overlay } from \"./ModalStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleEscape);\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleEscape);\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"auto\";\r\n    }\r\n\r\n    handleEscape = (e) => e.code === \"Escape\" && this.props.closeModal();\r\n\r\n    onOverlayClick = ({ target, currentTarget }) => {\r\n        target === currentTarget && this.props.closeModal();\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return (\r\n            <Overlay onClick={this.onOverlayClick}>\r\n                <div className='modal'>\r\n                    {children}\r\n                </div>\r\n            </Overlay>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.object,\r\n}","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderSpiner = () => {\r\n    return (\r\n        <>\r\n            <Loader type=\"Puff\" color=\"#51ff00\" height={300} width={300} timeout={5000} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoaderSpiner;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import { Component } from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\nimport { toast } from 'react-toastify';\r\nimport Api from '../../utils/Api'\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport LoaderSpiner from \"../Loader/Loader\";\r\n\r\nimport { ImageGalleryList } from './ImageGalleryStyled';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n\r\nclass ImageGallery extends Component {\r\n    state = {\r\n        imageNameSearch: '',\r\n        page: 1,\r\n        imageData: null,\r\n        isModalOpen: false,\r\n        setImagePath: '',\r\n        onLoadImage: false,\r\n    };\r\n\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        const prevName = prevProps.imageNameSearch;\r\n        const nextName = this.props.imageNameSearch;\r\n        const prevPage = prevState.page;\r\n        const { page } = this.state;\r\n        const notifySuccess = () => toast.success('Поиск успешно выполнен!!!');\r\n        const notifyError = () => toast.error('По вашему запросу ничего не найдено');\r\n        if (prevName !== nextName) {\r\n            this.setState({ page: 1, isModalOpen: true, onLoadImage: true });\r\n            try {\r\n                const response = await Api(nextName, page);\r\n\r\n                if (response.length) {\r\n                    this.setState({ imageData: response })\r\n                    notifySuccess();\r\n                } else {\r\n                    return notifyError();\r\n                }\r\n            } catch (error) {\r\n                alert(error);\r\n            } finally {\r\n                this.setState({ isModalOpen: false, onLoadImage: false })\r\n            }\r\n        }\r\n        if (prevPage !== page) {\r\n            this.setState({ isModalOpen: true, onLoadImage: true })\r\n            try {\r\n                const response = await Api(nextName, page);\r\n\r\n                if (response.length) {\r\n                    this.setState((prevState) => ({ imageData: [...prevState.imageData, ...response] }))\r\n\r\n                } else {\r\n                    return notifyError();\r\n                }\r\n            } catch (error) {\r\n                alert(error);\r\n            } finally {\r\n                window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: 'smooth',\r\n                });\r\n                this.setState({ isModalOpen: false, onLoadImage: false });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    closeModal = () =>\r\n        this.setState({ isModalOpen: false, setImagePath: '' })\r\n\r\n    openModalWithImage = (path) => {\r\n        this.setState({ isModalOpen: true, setImagePath: path })\r\n\r\n    }\r\n\r\n    onHandleLoadMore = () => {\r\n        this.setState((prevState) => ({ page: prevState.page + 1 }))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { imageData, isModalOpen, setImagePath, onLoadImage } = this.state;\r\n        return (\r\n            <>\r\n                <ImageGalleryList>\r\n                    {imageData && imageData.map(({ id, webformatURL, largeImageURL, tag }) => {\r\n                        return < ImageGalleryItem\r\n                            key={id}\r\n                            id={id}\r\n                            tag={tag}\r\n                            webformatURL={webformatURL}\r\n                            largeImageURL={largeImageURL}\r\n                            openModalWithImage={this.openModalWithImage} />\r\n                    })}\r\n                </ImageGalleryList>\r\n                {imageData?.length && <Button onHandleLoadMore={this.onHandleLoadMore} />}\r\n                {isModalOpen && (\r\n                    <Modal closeModal={this.closeModal}>\r\n                        {onLoadImage ? <LoaderSpiner /> : <img src={setImagePath} width=\"1000\" height=\"800\" alt=\"ItisPhoto\" className=\"imageInModal\" />}\r\n                    </Modal>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageGallery","import styled from \"styled-components\";\r\n\r\nexport const SearchbarWrapper = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    .SearchForm {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n\r\n.SearchForm-button {\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.SearchForm-button:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.SearchForm-button-label {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n\r\n.SearchForm-input {\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n.SearchForm-input::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n\r\n\r\n`;","import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SearchbarWrapper } from './SearchbarStyled';\r\n\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        imageNameSearch: '',\r\n    };\r\n\r\n    handleImageNameChange = event => {\r\n        this.setState({ imageNameSearch: event.currentTarget.value.toLowerCase() })\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const notify = () => toast.warn('Для нового поиска изображения необходимо ввести слово!');\r\n        if (this.state.imageNameSearch.trim() === '' & this.state.imageNameSearch.length) {\r\n            notify();\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(this.state.imageNameSearch);\r\n        this.setState({ imageNameSearch: '' });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <SearchbarWrapper>\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        name=\"imageNameSearch\"\r\n                        onChange={this.handleImageNameChange}\r\n                    />\r\n                </form>\r\n            </SearchbarWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar","import { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GlobalStyles from \"../src/style/GlobalStyle\";\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\nimport Searchbar from './Components/Seachbar/Searchbar';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    imageNameSearch: '',\r\n  };\r\n\r\n  handleFormSubmit = imageNameSearch => {\r\n    this.setState({ imageNameSearch })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <GlobalStyles />\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n        <ImageGallery imageNameSearch={this.state.imageNameSearch} />\r\n        <ToastContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}